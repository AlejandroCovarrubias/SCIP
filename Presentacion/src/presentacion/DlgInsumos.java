/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import entidades.Cliente;
import entidades.Insumo;
import entidades.Trabajo;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import negocio.INegocio;
import presentacion.utils.TextPrompt;

/**
 *
 * @author Alejandro Galindo
 */
public class DlgInsumos extends javax.swing.JDialog {

    private INegocio fachada;

    private Insumo insumo;

    private Modals modal;

    private List<Trabajo> trabajos = new ArrayList<>();

    /**
     * Creates new form DlgClientes
     */
    public DlgInsumos(java.awt.Frame parent, boolean modal, Modals mode, Insumo insumo, INegocio fachada) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(parent);

        this.fachada = fachada;
        this.insumo = insumo;
        this.modal = mode;

        TextPrompt razon = new TextPrompt("DESCRIPCION", txtDescripcion);
        razon.changeAlpha(0.75f);
        txtDescripcion.setBorder(BorderFactory.createCompoundBorder(txtDescripcion.getBorder(), BorderFactory.createEmptyBorder(10, 10, 10, 10)));

        actualizarTablaTrabajos();

        if (mode == Modals.AGREGAR) {
            txtModal.setText("COMPRAR INSUMO");
            btnModal.setText("REALIZAR COMPRA DE INSUMO");
            this.setTitle("REALIZAR COMPRA DE INSUMO");

        } else if (mode == Modals.EDITAR) {
            txtModal.setText("EDITAR COMPRA DE INSUMO");
            btnModal.setText("EDITAR");
            this.setTitle("EDITAR COMPRA DE INSUMO");
            txtDescripcion.setText("" + this.insumo.getDescripcion());
            spinCosto.setValue(this.insumo.getCosto());
            spinCantidad.setValue(this.insumo.getCantidad());
        }
    }

    private void actualizarTablaTrabajos() {
        this.trabajos = fachada.getTrabajos();

        DefaultTableModel trabajosTM = (DefaultTableModel) tablaTrabajos.getModel();
        Object rowData[] = new Object[6];

        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");

        for (int i = 0; i < trabajos.size(); i++) {
            if (!trabajos.get(i).estaEliminado()) {
                rowData[0] = trabajos.get(i).getFolioTrabajo();
                rowData[1] = trabajos.get(i).getCliente().getRazonSocial();
                rowData[2] = trabajos.get(i).getFallaCliente();
                rowData[3] = formatter.format(trabajos.get(i).getFechaCreacion());
                trabajosTM.addRow(rowData);
            }
        }
    }

    private String validar() {
        String mensaje = "";

        if (txtDescripcion.getText().equals("")) {
            mensaje = mensaje + "Agrege una descripción \n\r";
        }

        if (!spinCantidad.getValue().toString().matches("^\\d+")) {
            mensaje = mensaje + "La cantidad debe ser un número no decimal \n\r";
        }

        return mensaje;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtModal = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txtDescripcion = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnModal = new javax.swing.JButton();
        spinCosto = new javax.swing.JSpinner();
        spinCantidad = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTrabajos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        txtModal.setFont(new java.awt.Font("Lato", 1, 24)); // NOI18N
        txtModal.setText("MODALIDAD");

        txtDescripcion.setFont(new java.awt.Font("Lato", 0, 18)); // NOI18N
        txtDescripcion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDescripcion.setMaximumSize(new java.awt.Dimension(576, 50));
        txtDescripcion.setMinimumSize(new java.awt.Dimension(576, 50));
        txtDescripcion.setName(""); // NOI18N
        txtDescripcion.setPreferredSize(new java.awt.Dimension(576, 50));

        btnCancelar.setFont(new java.awt.Font("Lato", 1, 12)); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnModal.setFont(new java.awt.Font("Lato", 1, 12)); // NOI18N
        btnModal.setText("MODALIDAD");
        btnModal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModalActionPerformed(evt);
            }
        });

        spinCosto.setFont(new java.awt.Font("Lato", 0, 18)); // NOI18N
        spinCosto.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 0.1d));
        spinCosto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        spinCosto.setMaximumSize(new java.awt.Dimension(280, 50));
        spinCosto.setMinimumSize(new java.awt.Dimension(280, 50));
        spinCosto.setPreferredSize(new java.awt.Dimension(280, 50));

        spinCantidad.setFont(new java.awt.Font("Lato", 0, 18)); // NOI18N
        spinCantidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        spinCantidad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        spinCantidad.setMaximumSize(new java.awt.Dimension(280, 50));
        spinCantidad.setMinimumSize(new java.awt.Dimension(280, 50));
        spinCantidad.setPreferredSize(new java.awt.Dimension(280, 50));

        jLabel1.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel1.setText("COSTO");

        jLabel2.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        jLabel2.setText("CANTIDAD");

        tablaTrabajos.setFont(new java.awt.Font("Lato", 0, 14)); // NOI18N
        tablaTrabajos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Cliente", "Falla Encontrada", "Fecha de Creación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaTrabajos.setRowHeight(28);
        tablaTrabajos.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tablaTrabajos.setSelectionForeground(new java.awt.Color(102, 102, 102));
        jScrollPane1.setViewportView(tablaTrabajos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnModal, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(spinCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(spinCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtModal)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(249, 249, 249)
                                .addComponent(jLabel2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtModal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spinCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnModal, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "¿Estás seguro que deseas cancelar esta acción?", "Cancelar", JOptionPane.YES_NO_OPTION);

        if (showConfirmDialog == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnModalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModalActionPerformed
        String resultado = "";
        String validar = "";

        validar = validar();

        if (modal == Modals.AGREGAR) {
            if (validar.equals("")) {
                Insumo insumoAux = new Insumo();
                insumoAux.setDescripcion(txtDescripcion.getText());
                insumoAux.setCantidad((int) spinCantidad.getValue());
                insumoAux.setCosto((double) spinCosto.getValue());

                int seleccion = tablaTrabajos.getSelectedRow();
                if (seleccion < 0) {
                    int confirm = JOptionPane.showConfirmDialog(this, "No haz seleccionado un trabajo. \n\r¿Deseas realizar la compra del insumo sin asignar un trabajo?", "Confirmación", JOptionPane.YES_NO_OPTION);

                    if (confirm == JOptionPane.YES_OPTION) {
                        resultado = fachada.agregarInsumo(insumoAux);
                    } else {
                        return;
                    }
                } else {
                    Trabajo trabajoAux = trabajos.get(seleccion);

                    insumoAux.setTrabajo(trabajoAux);

                    resultado = fachada.agregarInsumo(insumoAux);
                }
            } else {
                resultado = validar;
            }
        } else if (modal == Modals.EDITAR) {
            if(validar.equals("")){
                Insumo insumoAux = this.insumo;
                insumoAux.setDescripcion(txtDescripcion.getText());
                insumoAux.setCantidad((int) spinCantidad.getValue());
                insumoAux.setCosto((double) spinCosto.getValue());
                
                int seleccion = tablaTrabajos.getSelectedRow();
                if (seleccion < 0) {
                    int confirm = JOptionPane.showConfirmDialog(this, "No haz seleccionado un trabajo. \n\r¿Deseas editar la compra del insumo sin asignar un trabajo?", "Confirmación", JOptionPane.YES_NO_OPTION);

                    if (confirm == JOptionPane.YES_OPTION) {
                        resultado = fachada.editarInsumo(insumoAux);
                    } else {
                        return;
                    }
                } else {
                    Trabajo trabajoAux = trabajos.get(seleccion);

                    insumoAux.setTrabajo(trabajoAux);

                    resultado = fachada.editarInsumo(insumoAux);
                }
            } else {
                resultado = validar;
            }
        }

        JOptionPane.showMessageDialog(this, resultado, "COMPRA DE INSUMOS", JOptionPane.INFORMATION_MESSAGE);
        if (validar.equals("")) {
            this.dispose();
        }
    }//GEN-LAST:event_btnModalActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnModal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner spinCantidad;
    private javax.swing.JSpinner spinCosto;
    private javax.swing.JTable tablaTrabajos;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JLabel txtModal;
    // End of variables declaration//GEN-END:variables
}
